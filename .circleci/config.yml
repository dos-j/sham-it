version: 2
jobs:
  build:
    working_directory: ~/sham-it
    docker:
      - image: node:8.9.1
    steps:
      - checkout
      - restore_cache:
          key: sham-it-node_modules-{{ .Branch }}-{{ checksum "yarn.lock"}}
      - run:
          name: Install yarn
          command: curl -o- -L https://yarnpkg.com/install.sh | bash
      - run:
          name: Install Dependencies
          command: yarn
      - save_cache:
          key: sham-it-node_modules-{{ .Branch }}-{{ checksum "yarn.lock"}}
          paths:
            - "~/sham-it/node_modules"
      - run:
          name: Lint Files
          command: mkdir -p ~/sham-it/reports/ && npm run lint -- --format junit --output-file ~/sham-it/reports/eslint.xml
      - run:
          name: Run Tests
          command: npm test -- --coverage -i && mv test-report.xml reports/jest-junit.xml
      - store_test_results:
          path: ~/sham-it/reports
      - store_artifacts:
          path: ~/sham-it/coverage
          destination: coverage
      - run:
          name: Publish to CodeCov
          command: bash <(curl -s https://codecov.io/bash)
      - run:
          name: Semantic Release
          command: DEBUG=condition npm_config_loglevel=verbose npm run semantic-release || true
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)

      # use a primary image that already has Docker (recommended)
      # or install it during a build like we do here
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.09.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      # build and push Docker image
      - run: |
          set -ex
          VERSION=$(git tag | tail -n 1 | grep v | sed 's/v//')

          if curl --silent -f -lSL https://index.docker.io/v1/repositories/chunkysamurai/sham-it/tags/$VERSION > /dev/null; then
            echo "The image already exists in the registry"
            exit 0
          fi

          docker build -t chunkysamurai/sham-it:$VERSION -t chunkysamurai/sham-it:latest .      # (4)
          set +x
          docker login -u $DOCKER_USER -p $DOCKER_PASS         # (5)
          set -x
          docker push chunkysamurai/sham-it:$VERSION
          docker push chunkysamurai/sham-it:latest
